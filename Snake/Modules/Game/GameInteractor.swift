//
//  GameInteractor.swift
//  Snake
//
//  Created by Zvonimir Medak on 21.02.2022..
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation
import SceneKit
import CombineExt

final class GameInteractor {

    // MARK: - Private properties -

    private let input: Game.Input

    // MARK: - Lifecycle -

    init(input: Game.Input) {
        self.input = input
    }
}

// MARK: - Extensions -

extension GameInteractor: GameInteractorInterface {
    
    var snakeNode: SnakeNode? {
        input.gameManager.snakeNode
    }

    var currentArenaNode: SCNNode? {
        input.gameManager.currentArenaNode
    }

    var foodNode: FoodNode? {
        input.gameManager.currentFoodNode
    }

    var gameSpeedUpdateInterval: TimeInterval {
        input.userStorage.gameSpeed.updateInterval
    }

    func makeArena(with position: SCNVector3, isStart: Bool = false, time: Int? = nil) -> SCNNode {
        input.gameManager.makeArenaNode(using: position, isStart: isStart, time: time)
    }

    func makeGameStartedNode(using arenaNodePosition: SCNVector3) -> SCNNode {
        input.gameManager.makeGameStartedNode(using: arenaNodePosition)
    }

    func makeFoodNode() -> FoodNode? {
        input.gameManager.makeFoodNode()
    }

    func updateScoreNode(currentScore: Float) {
        input.gameManager.updateScoreNode(currentScore: currentScore)
    }

    func calculateNewScore(with currentScore: Float) -> Float {
        input.gameManager.calculateNewScore(with: currentScore)
    }
}
