//
//  HighscoresViewController.swift
//  Snake
//
//  Created by Zvonimir Medak on 21.06.2022..
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import Combine
import CombineExt
import CombineCocoa

final class HighscoresViewController: UIViewController {

    // MARK: - IBOutlets -

    @IBOutlet weak var tableView: UITableView!
    @IBOutlet var highscorePlaceholderView: UIView!

    // MARK: - Public properties -

    var presenter: HighscoresPresenterInterface!

    // MARK: - Private properties -

    private var cancellables: Set<AnyCancellable> = []

    private lazy var dataSource: TableDataSourceDelegate = {
        let animation = TableCellAnimationFactory.makeSlideInWithFadeAnimation(duration: 0.5, delay: 0.1, from: .left)
        return .init(tableView: tableView, animation: animation)
    }()

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
    }

    override func viewDidDisappear(_ animated: Bool) {
        super.viewDidDisappear(animated)
        navigationController?.navigationBar.topItem?.backBarButtonItem = nil
    }
}

// MARK: - Extensions -

extension HighscoresViewController: HighscoresViewInterface {
}

// MARK: - View setup

private extension HighscoresViewController {

    func setupView() {
        setupUI()
        let backAction = setupBackButton()

        let output = Highscores.ViewOutput(backAction: backAction)

        let input = presenter.configure(with: output)

        handle(sections: input.sections)
    }
}

// MARK: - UI setup

private extension HighscoresViewController {

    func setupUI() {
        tableView.backgroundColor = .white
        navigationController?.navigationBar.titleTextAttributes = [.foregroundColor: UIColor.black]
        tableView.registerNib(cellOfType: HighscoreTableViewCell.self)
        setupPlaceholderView()
    }

    func setupBackButton() -> Signal<Void> {
        navigationController?.navigationBar.topItem?.hidesBackButton = true
        let backButton = UIBarButtonItem(title: "< Home", style: .done, target: self, action: nil)
        navigationItem.leftBarButtonItem = backButton
        return backButton.tapPublisher.asSignal()
    }

    func setupPlaceholderView() {
        highscorePlaceholderView.alpha = 0.0
        tableView.backgroundView = highscorePlaceholderView

        highscorePlaceholderView.snp.makeConstraints {
            $0.centerX.equalTo(view)
            $0.leading.trailing.equalTo(view)
            $0.top.equalTo(view).offset(48)
        }
    }
}

// MARK: - Handlers

private extension HighscoresViewController {

    func handle(sections: Driver<[TableSectionItem]>) {
        let placeholderHandler: ([TableSectionItem]?) -> Void = { [unowned self] in
            highscorePlaceholderView.isHiddenAnimated = !($0?.isEmpty ?? true)
        }
        sections
            .compactMap { $0 }
            .handleEvents(receiveOutput: placeholderHandler)
            .assignWeakified(on: dataSource, at: \.sections)
            .store(in: &cancellables)
    }
}
